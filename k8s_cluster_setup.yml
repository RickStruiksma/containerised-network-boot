---
- name: configure k8s nodes
  hosts: all
  become: yes
  tasks:
    - name: create /etc/modules-load.d/containerd.conf
      file: 
        path: /etc/modules-load.d/containerd.conf
        state: touch
    - name: set containerd.conf kernel modules
      template:
        src: containerd.conf.j2
        dest: /etc/modules-load.d/containerd.conf
    - name: run modprobe to activate overlay
      command: modprobe overlay
    - name: run modprobe to activate br_netfilter
      command: modprobe br_netfilter
    - name: copy kubernetes-cri settings
      template:
        src: k8s.cri.conf.j2
        dest: /etc/sysctl.d/100-kubernetes-cri.conf
    - name: rerun sysctl to pick up changes
      command: sudo sysctl --system
    - name: add docker-ce repo for containerd package
      yum_repository:
        name: docker-ce
        description: docker-ce repo
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable 
        gpgkey: https://download.docker.com/linux/centos/gpg
        gpgcheck: yes
        enabled: yes
    - name: install containerd
      yum:
        name: containerd.io
        state: present
    - name: copy containerd default config
      shell: containerd config default > /etc/containerd/config.toml
    - name: restart containerd
      service:
        name: containerd
        state: started
        enabled: yes
    - name: turn off swap
      command: swapoff -a
    - name: configure k8s repository
      template:
        src: repo_config.j2
        dest: /etc/yum.repos.d/kubernetes.repo
    - name: intall kubeadm cluster packages
      yum:
        name: "{{ item }}"
        state: present
      loop: 
            - kubelet
            - kubeadm
            - kubectl
    - name: start and enable kubelet
      service:
        name: kubelet
        state: started
        enabled: yes
- name: create cluster control node
  hosts: controlplane
  tasks:
    - name: initialize cluster
      become_user: cloud_user
      become: yes
      shell: sudo kubeadm init --pod-network-cidr 192.168.0.0/16
    - name: create .kube dir in user home
      file:
        path: /home/cloud_user/.kube
        state: directory
        owner: cloud_user
        group: cloud_user
    - name: copy kubernetes admin conf to /home/cloud_user/.kube
      become: yes
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/cloud_user/.kube/config
        owner: cloud_user
        group: cloud_user
        remote_src: true
    - name: pull calico manifest yaml
      become_user: cloud_user
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
    - name: create new cluster token
      shell: kubeadm token create --print-join-command
      register: k8s_token
- name: join nodes to cluster
  hosts: nodes
  become: yes
  tasks:
    - name: execute join command
      command: "{{ hostvars['control']['k8s_token']['stdout'] }}"
